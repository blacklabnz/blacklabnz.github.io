<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Index on blacklabnz | Data | DevOps</title>
    <link>https://blacklabnz.github.io/</link>
    <description>Recent content in Index on blacklabnz | Data | DevOps</description>
    <image>
      <url>https://blacklabnz.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blacklabnz.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 20 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blacklabnz.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Consume Websocket stream and send to Prometheus in Python</title>
      <link>https://blacklabnz.github.io/posts/websocket-prometheus/</link>
      <pubDate>Fri, 18 Mar 2022 23:39:13 +1300</pubDate>
      
      <guid>https://blacklabnz.github.io/posts/websocket-prometheus/</guid>
      <description>Recently I was tasked with consuming data from websocket, analyse it and then send data to Prometheus. The theory is pretty straight forward: getting data from websocket API in a stream and analyse and take the data points and send it to prometheus for visulization. In this blog you will have all the steps and code needed to reporduce this flow. With this in mind, I decided using python to achieve all these.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://blacklabnz.github.io/about/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blacklabnz.github.io/about/</guid>
      <description>Hi there, great to meet you here. My name is Neilï¼Œcurrently working as a Data Engineer operating in the cloud.
Previously I was working in DevOps capacity, focusing on building useful CICD pipelines, automations, APIs and else.
Through out my career, I&amp;rsquo;d like to share some tips and tricks which I hope you find helpful !</description>
    </item>
    
    
  </channel>
</rss>
